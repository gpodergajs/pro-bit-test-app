[
  {
    "project_id": "-1",
    "target_id": "11ad5bd5366005",
    "parent_id": "0",
    "target_type": "folder",
    "name": "Samples",
    "sort": 0,
    "version": 0,
    "status": 1,
    "is_changed": -1,
    "is_create": 1,
    "description": "",
    "server_id": "0",
    "request": {
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": []
      },
      "body": {
        "parameter": []
      },
      "cookie": {
        "parameter": []
      },
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "pre_tasks": [],
      "post_tasks": []
    }
  },
  {
    "project_id": "-1",
    "target_id": "11ad5bd5766006",
    "parent_id": "11ad5bd5366005",
    "target_type": "api",
    "name": "Create a new user",
    "sort": 0,
    "version": 0,
    "mark_id": "1",
    "status": 1,
    "is_changed": -1,
    "is_create": 1,
    "method": "POST",
    "url": "https://rest.echoapi.com/users",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "json",
        "parameter": [],
        "raw": "{\n\t\"id\": 0,\n\t\"username\": \"echo api\",\n\t\"firstName\": \"Echo\",\n\t\"lastName\": \"Api\",\n\t\"email\": \"support@echoapi.com\",\n\t\"password\": \"12345\",\n\t\"phone\": \"\",\n\t\"userStatus\": 0\n}",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    }
  },
  {
    "project_id": "-1",
    "target_id": "11ad5bd5766007",
    "parent_id": "11ad5bd5366005",
    "target_type": "api",
    "name": "Get user info",
    "sort": 0,
    "version": 0,
    "mark_id": "1",
    "status": 1,
    "is_changed": -1,
    "is_create": 1,
    "method": "GET",
    "url": "https://rest.echoapi.com/users/{username}",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "none",
        "parameter": [],
        "raw": "",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": [
          {
            "param_id": "11ad5b50b66001",
            "field_type": "String",
            "is_checked": 1,
            "key": "username",
            "not_null": 1,
            "value": "echo api",
            "description": ""
          }
        ]
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    }
  },
  {
    "project_id": "-1",
    "target_id": "11ad5bd5766008",
    "parent_id": "11ad5bd5366005",
    "target_type": "api",
    "name": "Update user info",
    "sort": 0,
    "version": 0,
    "mark_id": "1",
    "status": 1,
    "is_changed": -1,
    "is_create": 1,
    "method": "PUT",
    "url": "https://rest.echoapi.com/users/{username}",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "json",
        "parameter": [],
        "raw": "{\n\t\"id\": 0,\n\t\"username\": \"\",\n\t\"firstName\": \"Tom\",\n\t\"lastName\": \"\",\n\t\"email\": \"\",\n\t\"password\": \"\",\n\t\"phone\": \"\",\n\t\"userStatus\": 0\n}",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": [
          {
            "param_id": "11ad5b50b66002",
            "field_type": "String",
            "is_checked": 1,
            "key": "username",
            "not_null": 1,
            "value": "echo api",
            "description": ""
          }
        ]
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    }
  },
  {
    "project_id": "-1",
    "target_id": "11ad5bd5766009",
    "parent_id": "11ad5bd5366005",
    "target_type": "api",
    "name": "Delete user",
    "sort": 0,
    "version": 0,
    "mark_id": "1",
    "status": 1,
    "is_changed": -1,
    "is_create": 1,
    "method": "DELETE",
    "url": "https://rest.echoapi.com/users/{username}",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "none",
        "parameter": [],
        "raw": "",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": [
          {
            "param_id": "11ad5b50b66003",
            "field_type": "String",
            "is_checked": 1,
            "key": "username",
            "not_null": 1,
            "value": "echo api",
            "description": ""
          }
        ]
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    }
  },
  {
    "project_id": "-1",
    "target_id": "11ad5bd576600a",
    "parent_id": "11ad5bd5366005",
    "target_type": "sse",
    "name": "SSE",
    "sort": 0,
    "version": 0,
    "mark_id": "1",
    "status": 1,
    "is_changed": -1,
    "is_create": 1,
    "method": "POST",
    "url": "https://rest.echoapi.com/sse",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "none",
        "parameter": [],
        "raw": "",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {}
  },
  {
    "project_id": "",
    "target_id": "11ad6d7cb7d005",
    "parent_id": "11ad5bd5366005",
    "target_type": "folder",
    "name": "PROBIT-TEST",
    "sort": 1,
    "version": 0,
    "status": 1,
    "is_changed": 1,
    "is_create": 1,
    "description": "",
    "server_id": "0",
    "request": {
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": []
      },
      "body": {
        "parameter": []
      },
      "cookie": {
        "parameter": []
      },
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "pre_tasks": [],
      "post_tasks": []
    },
    "is_force": -1,
    "is_deleted": -1,
    "is_conflicted": -1,
    "mark_id": "",
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "1963b97f7b5005",
    "parent_id": "11ad6d7cb7d005",
    "target_type": "api",
    "name": "GetCars",
    "sort": 1,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "GET",
    "url": "http://localhost:5000/api/cars/1",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "none",
        "parameter": [],
        "raw": "",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "1989c3c33b5007",
    "parent_id": "11ad6d7cb7d005",
    "target_type": "api",
    "name": "Login",
    "sort": 2,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "POST",
    "url": "http://localhost:5000/api/auth/login",
    "request": {
      "auth": {
        "type": "inherit",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": ""
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "json",
        "parameter": [
          {
            "description": "",
            "field_type": "String",
            "is_checked": 1,
            "key": "username",
            "value": "",
            "not_null": 1,
            "param_id": "1989f4ffbb5006"
          },
          {
            "description": "",
            "field_type": "String",
            "is_checked": 1,
            "key": "password",
            "value": "",
            "not_null": 1,
            "param_id": "1989f7667b5007"
          }
        ],
        "raw": "{\r\n    \"username\" : \"admin1\",\r\n    \"password\" : \"adminPassword\"\r\n}",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [],
      "header": {
        "parameter": [
          {
            "description": "",
            "field_type": "String",
            "is_checked": 1,
            "key": "Content-Type",
            "value": "application/json",
            "not_null": 1,
            "param_id": "1ab4a4097b5012"
          }
        ]
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "1989838d3b5006",
    "parent_id": "11ad6d7cb7d005",
    "target_type": "api",
    "name": "DeleteCar",
    "sort": 3,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "DELETE",
    "url": "http://localhost:5000/api/cars/1",
    "request": {
      "auth": {
        "type": "bearer",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTc1NDkzNzE5MiwianRpIjoiMGIyNjk2MTctNzEzMi00MDg4LWJlMmQtNzY4Y2NjODNlYjYwIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6ImFkbWluIiwibmJmIjoxNzU0OTM3MTkyLCJjc3JmIjoiNzljODI2OWItZWJmMC00M2Q5LWJhNTctYmEyMDliZjkzZmI5IiwiZXhwIjoxNzU0OTQwNzkyLCJyb2xlIjoiYWRtaW4ifQ.4Dez6-BEocpINw_8n8q_iRTsvdLtbcCzFSOwg2OQo_k"
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "none",
        "parameter": [],
        "raw": "{\r\n    \"username\": \"\",\r\n    \"password\": \"\"\r\n}",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [],
      "header": {
        "parameter": [
          {
            "description": "",
            "field_type": "String",
            "is_checked": -1,
            "key": "Content-Type",
            "value": "application/json",
            "not_null": 1,
            "param_id": "19899a257b5006"
          }
        ]
      },
      "query": {
        "parameter": [
          {
            "param_id": "198a3c78fb5007",
            "field_type": "String",
            "is_checked": -1,
            "key": "username",
            "not_null": 1,
            "value": "asd",
            "description": ""
          },
          {
            "param_id": "198a47a07b5008",
            "field_type": "String",
            "is_checked": -1,
            "key": "password",
            "not_null": 1,
            "value": "asdsa",
            "description": ""
          }
        ],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "b885ab136d007",
    "parent_id": "11ad6d7cb7d005",
    "target_type": "api",
    "name": "CreateCar",
    "sort": 4,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "POST",
    "url": "http://localhost:5000/api/cars",
    "request": {
      "auth": {
        "type": "bearer",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTc1ODIxMzA4NiwianRpIjoiOWM5MjI3MTItNjhiMi00NTc0LWJkNDYtYTI0ZDhkZWVmYWVkIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6IjEiLCJuYmYiOjE3NTgyMTMwODYsImNzcmYiOiJiM2Y5Njc0MS0wYmJhLTRlZTgtYmNiYy04MzVlMzE2OGVmNzIiLCJleHAiOjE3NTgyMTM5ODYsInVzZXJfdHlwZV9pZCI6IjIifQ.5k591qDUVrXF9_Avuk4jjlXdEHvSEuZB-5rlnYFBk5M"
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "json",
        "parameter": [],
        "raw": "{\r\n  \"vin\": \"123213asdasds\",\r\n  \"license_plate\": \"123sdf\",\r\n  \"model_id\": 5,\r\n  \"owner_id\": 12,\r\n  \"body_type_id\": 2,\r\n  \"engine_type_id\": 3,\r\n  \"transmission_type_id\": 1,\r\n  \"drive_type_id\": 3,\r\n  \"engine_capacity\": 2.0,\r\n  \"fuel_consumption\": 7.5,\r\n  \"mileage\": 85000,\r\n  \"color\": \"Black\",\r\n  \"doors\": 4,\r\n  \"registration_year\": 2018,\r\n  \"price\": 15000\r\n}\r\n",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  },
  {
    "project_id": "",
    "target_id": "b947dffb74005",
    "parent_id": "11ad6d7cb7d005",
    "target_type": "api",
    "name": "EditCar",
    "sort": 5,
    "version": 0,
    "mark_id": "",
    "status": 1,
    "is_changed": -1,
    "is_create": -1,
    "method": "PUT",
    "url": "http://localhost:5000/api/cars/21",
    "request": {
      "auth": {
        "type": "bearer",
        "kv": {
          "key": "",
          "value": "",
          "in": "header"
        },
        "bearer": {
          "key": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTc1ODIxMzA4NiwianRpIjoiOWM5MjI3MTItNjhiMi00NTc0LWJkNDYtYTI0ZDhkZWVmYWVkIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6IjEiLCJuYmYiOjE3NTgyMTMwODYsImNzcmYiOiJiM2Y5Njc0MS0wYmJhLTRlZTgtYmNiYy04MzVlMzE2OGVmNzIiLCJleHAiOjE3NTgyMTM5ODYsInVzZXJfdHlwZV9pZCI6IjIifQ.5k591qDUVrXF9_Avuk4jjlXdEHvSEuZB-5rlnYFBk5M"
        },
        "basic": {
          "username": "",
          "password": ""
        },
        "digest": {
          "username": "",
          "password": "",
          "realm": "",
          "nonce": "",
          "algorithm": "MD5",
          "qop": "",
          "nc": "",
          "cnonce": "",
          "opaque": "",
          "disableRetryRequest": false
        },
        "oauth1": {
          "consumerKey": "",
          "consumerSecret": "",
          "signatureMethod": "HMAC-SHA1",
          "addEmptyParamsToSign": true,
          "includeBodyHash": true,
          "addParamsToHeader": false,
          "realm": "",
          "version": "1.0",
          "nonce": "",
          "timestamp": "",
          "verifier": "",
          "callback": "",
          "tokenSecret": "",
          "token": "",
          "disableHeaderEncoding": false
        },
        "oauth2": {
          "addTokenTo": "header",
          "headerPrefix": "Bearer",
          "access_token": "",
          "grant_type": "password_credentials",
          "redirect_uri": "",
          "authUrl": "",
          "accessTokenUrl": "",
          "clientId": "",
          "clientSecret": "",
          "username": "",
          "password": "",
          "challengeAlgorithm": "S256",
          "code_verifier": "Bearer",
          "scope": "",
          "state": "",
          "client_authentication": "header",
          "refreshTokenUrl": "",
          "authRequestParams": [],
          "tokenRequestParams": [],
          "refreshRequestParams": []
        },
        "hawk": {
          "authId": "",
          "authKey": "",
          "algorithm": "",
          "user": "",
          "nonce": "",
          "extraData": "",
          "app": "",
          "delegation": "",
          "timestamp": "",
          "includePayloadHash": false
        },
        "awsv4": {
          "accessKey": "",
          "secretKey": "",
          "region": "",
          "service": "",
          "sessionToken": "",
          "addAuthDataToQuery": false
        },
        "ntlm": {
          "username": "",
          "password": "",
          "domain": "",
          "workstation": "",
          "disableRetryRequest": false
        },
        "edgegrid": {
          "accessToken": "",
          "clientToken": "",
          "clientSecret": "",
          "nonce": "",
          "timestamp": "",
          "baseURi": "",
          "headersToSign": ""
        },
        "noauth": {},
        "jwt": {
          "addTokenTo": "header",
          "algorithm": "HS256",
          "secret": "",
          "isSecretBase64Encoded": false,
          "payload": "",
          "headerPrefix": "Bearer",
          "queryParamKey": "token",
          "header": ""
        },
        "asap": {
          "alg": "HS256",
          "iss": "",
          "aud": "",
          "kid": "",
          "privateKey": "",
          "sub": "",
          "claims": "",
          "exp": ""
        }
      },
      "body": {
        "mode": "json",
        "parameter": [],
        "raw": "{\r\n  \"price\": 20000,\r\n  \"color\": \"Black\"\r\n}\r\n",
        "raw_parameter": [],
        "raw_schema": {
          "type": "object"
        },
        "binary": null
      },
      "pre_tasks": [],
      "post_tasks": [],
      "header": {
        "parameter": []
      },
      "query": {
        "parameter": [],
        "query_add_equal": 1
      },
      "cookie": {
        "parameter": []
      },
      "restful": {
        "parameter": []
      }
    },
    "response": {
      "is_check_result": 1,
      "example": [
        {
          "example_id": "1",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Success",
            "is_default": 1,
            "code": "200",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        {
          "example_id": "2",
          "raw": "",
          "raw_parameter": [],
          "expect": {
            "name": "Failure",
            "is_default": -1,
            "code": "404",
            "content_type": "json",
            "verify_type": "schema",
            "mock": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        }
      ]
    },
    "description": "",
    "tags": [],
    "ai_expect_enable": -1,
    "is_check_result": 1,
    "is_socket": 1,
    "is_locked": -1,
    "is_force": -1,
    "attribute_info": {},
    "protocol": "http/1.1",
    "ai_expect": {
      "list": [],
      "none_math_expect_id": ""
    },
    "is_deleted": -1,
    "is_conflicted": -1,
    "vscode_version": "1.7.12"
  }
]